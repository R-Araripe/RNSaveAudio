{
  "manifest": {
    "_from": "rnsaveaudio@1.0.6",
    "_inBundle": false,
    "_location": "/RNSaveAudio",
    "_phantomChildren": {},
    "_requested": {
      "type": "version",
      "registry": true,
      "raw": "rnsaveaudio@1.0.6",
      "name": "rnsaveaudio",
      "escapedName": "rnsaveaudio",
      "rawSpec": "1.0.6",
      "saveSpec": null,
      "fetchSpec": "1.0.6"
    },
    "_requiredBy": [
      "/"
    ],
    "_spec": "1.0.6",
    "_where": "/Users/kambo/Documents/GitHub/NDART-RN",
    "author": {
      "name": "Navraj Kambo",
      "email": "nkambo1@my.bcit.ca"
    },
    "bugs": {
      "url": "https://github.com/navrajkambo/RNSaveAudio/issues"
    },
    "description": "React Native audio saving module used for DSP",
    "devDependencies": {
      "babel-preset-react-native": "4.0.0",
      "react": "^16.2.0",
      "react-native": "^0.53.0"
    },
    "files": [
      "index.js",
      "android/src",
      "android/build.gradle",
      "ios"
    ],
    "homepage": "https://github.com/navrajkambo/RNSaveAudio#readme",
    "keywords": [
      "react-native",
      "audio-saving",
      "wav",
      "dsp"
    ],
    "license": "MIT",
    "main": "index.js",
    "name": "rnsaveaudio",
    "peerDependencies": {
      "react-native": ">=0.47"
    },
    "presets": [
      "react-native"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/navrajkambo/RNSaveAudio.git"
    },
    "rnpm": {
      "android": {
        "sourceDir": "android"
      }
    },
    "scripts": {
      "log-android": "node node_modules/react-native/local-cli/cli.js log-android",
      "run-android": "node node_modules/react-native/local-cli/cli.js run-android",
      "run-ios": "node node_modules/react-native/local-cli/cli.js run-ios",
      "start": "node node_modules/react-native/local-cli/cli.js start"
    },
    "version": "1.0.6",
    "dependencies": {
      "react-native-cli": "^2.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/beca/.cache/yarn/v6/npm-rnsaveaudio-1.0.6-ff612701-c3ec-4440-ad62-1330c55e49a7-1615578012065/node_modules/rnsaveaudio/package.json",
    "readmeFilename": "README.md",
    "readme": "# ![NDART LOGO](/72x72.png?raw=true)\n# NDART\n## http://ndart.ca\n##\n## RNSaveAudio Module [![npm version](https://badge.fury.io/js/rnsaveaudio.svg)](https://badge.fury.io/js/rnsaveaudio)\n### React-Native | [Home](README.md) | [Useful Links](UsefulLinks.md) | [Custom Module Tutorial](Tut.md)\n###\n### Purpose\nThe purpose of this module is to take an array of int16 data from javascript, and create a .wav file from that data, on Android and iOS devices natively. This module is essentially suppose to provide a sink when working with the `react-native-recording` module (https://www.npmjs.com/package/react-native-recording). More information can be found on the projects respective github homepage page -> https://github.com/qiuxiang/react-native-recording#readme...\n### Installation\n#### Android\n1) To install, run `npm install rnsaveaudio`\n2) Edit `/android/settings.gradle` and add the following lines...\n``` java\ninclude ':rnsaveaudio'\nproject(':rnsaveaudio').projectDir = new File(rootProject.projectDir, '../node_modules/rnsaveaudio/android')\n```\n3) Edit `/android/app/build.gradle` and add the following line inside of `dependencies`...\n``` java\ncompile project(':rnsaveaudio')\n```\n4) Edit `/android/app/src/main/java/.../MainApplication.java` with the follow lines...\n- Import the module at the top of the file\n```java\nimport com.navraj.rnsaveaudio.RNSaveAudioPackage;\n```\n- Instantiate the package inside of the `getPackages()` method\n```java\nnew RNSaveAudioPackage()\n```\n5) run the command `cd android && gradlew clean && cd ../` for windows, or `cd android && ./gradlew clean && cd ../` for OSX, inside the root directory of your react-native project\n#### iOS\n1) Open your xCode project and add the `RNSaveAudio.xcodeproj` file to your project\n2) Go to your project's build phases, and add the `libRNSaveAudio.a` file to the list labeled `Link Binary With Libraries`, using the `+` under the list\n- If you get an error saying xCode cannot find `<RCTEventEmitter.h>`, open `RNSaveAudio.h` inside of the `ios` project folder, and change the the header to `<React/RCTEventEmitter.h>`\n- For more information, look at https://github.com/maxs15/react-native-spinkit/wiki/Manual-linking---IOS\n### Notes\n- Version 1.0.6 is current\n- Works on Android and iOS (Tested)\n- Sends a promise when complete\n- Creates a .wav file based on an array of signed short (SInt16) values at a frequency of 44.1kHz (mono)\n- Meant to work with react-native-recording node package and react-native-fs package\n### Useage\n- Import the module using `import RNSaveAudio from 'rnsaveaudio';`\n- Export audio using `RNsaveAudio.saveWav(PATH+'/filename.wav',dataArray);`\n- Make sure to include the keywords `await` and `async` if used inside of a function, eg. `async func(prop){ const variable = await RNsaveAudio.saveWav(PATH+'/filename.wav',dataArray); }`\n### Contact Information\n- My email is `nkambo1@my.bcit.ca`, use the module name in the subject line.\n- Submit an issue to the github page. http://github.com/navrajkambo/RNSaveAudio/issues\n### Contribution\n- If someone would like to add methods for exporting stereo wav files, or files of other formats and sampling frequencies from signed short arrays, feel free to create a PR, it would be useful to have\n### Other Information\n- If you feel like contributing, send me a message or open an issue! Any help is appreciated :)\n- For more information on bridging native modules to react-native, have a look at https://gist.github.com/chourobin/f83f3b3a6fd2053fad29fff69524f91c, https://eastcodes.com/packaging-and-sharing-react-native-modules, and http://matthewsessions.com/2017/10/27/developing-rn-module.html. They are very informative!\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 navraj kambo NDART\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "type": "copy",
    "registry": "npm",
    "hash": "a1ea55a8-8082-470e-887e-48e20de1380e-1615581061141",
    "reference": "/usr/local/lib/node_modules/rnsaveaudio"
  },
  "registry": "npm",
  "hash": "a1ea55a8-8082-470e-887e-48e20de1380e-1615581061141"
}